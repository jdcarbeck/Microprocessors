


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   31 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   32 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   33 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010
   34 00000000 E0028008 
                       IODIR0  EQU              0xE0028008
   35 00000000 E0028004 
                       IOSET0  EQU              0xE0028004
   36 00000000 E002800C 
                       IOCLR0  EQU              0xE002800C
   37 00000000 E0028000 
                       IOPIN0  EQU              0xE0028000
   38 00000000 E002C000 
                       PINSEL0 EQU              0xE002C000
   39 00000000         
   40 00000000         
   41 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   42 00000000                 IMPORT           main
   43 00000000         
   44 00000000                 EXPORT           start
   45 00000000         start
   46 00000000         
   47 00000000         ; Initialise the VIC
   48 00000000 E59F00E8        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   49 00000004         
   50 00000004 E59F10E8        ldr              r1,=irqhan
   51 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   52 0000000C         
   53 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   54 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   55 00000014         
   56 00000014 E3A01010        mov              r1,#Timer0Mask
   57 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   58 0000001C         
   59 0000001C E3A01000        mov              r1,#0
   60 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 



ARM Macro Assembler    Page 3 


                                                            pending interrupt (
                                                            may not be needed)
   61 00000024         
   62 00000024         ; Initialise Timer 0
   63 00000024 E59F00CC        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   64 00000028         
   65 00000028 E3A01002        mov              r1,#TimerCommandReset
   66 0000002C E5801004        str              r1,[r0,#TCR]
   67 00000030         
   68 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts
   69 00000034 E5801000        str              r1,[r0,#IR]
   70 00000038         
   71 00000038 E59F10BC        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   72 0000003C E5801018        str              r1,[r0,#MR0]
   73 00000040         
   74 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   75 00000044 E5801014        str              r1,[r0,#MCR]
   76 00000048         
   77 00000048 E3A01001        mov              r1,#TimerCommandRun
   78 0000004C E5801004        str              r1,[r0,#TCR]
   79 00000050         
   80 00000050         
   81 00000050         
   82 00000050         
   83 00000050         ;thread0 will begin here the first time
   84 00000050         thread0Start
   85 00000050 E59F10A8        ldr              r1,=IO1DIR
   86 00000054 E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
   87 00000058 E5812000        str              r2,[r1]     ;make them outputs
   88 0000005C E59F10A0        ldr              r1,=IO1SET
   89 00000060 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   90 00000064 E59F209C        ldr              r2,=IO1CLR
   91 00000068         ; r1 points to the SET register
   92 00000068         ; r2 points to the CLEAR register
   93 00000068         
   94 00000068         ;Lab one here but polling the count
   95 00000068 E3A05601        ldr              r5,=0x00100000 ; end when the m
                                                            ask reaches this va
                                                            lue
   96 0000006C         
   97 0000006C E3A03801 
                       wloop   ldr              r3,=0x00010000 
                                                            ; start with P1.16.
                                                            
   98 00000070 E5823000 
                       floop   str              r3,[r2]     ; clear the bit -> 
                                                            turn on the LED
   99 00000074         
  100 00000074         delay0
  101 00000074         ;delay for about a half second
  102 00000074 E3A08402        ldr              R8,=0x2000000
  103 00000078 E2588001 
                       dloop0  subs             R8,R8,#1
  104 0000007C 1AFFFFFD        bne              dloop0
  105 00000080         



ARM Macro Assembler    Page 4 


  106 00000080 E5813000        str              r3,[r1]     ;set the bit -> tur
                                                            n off the LED
  107 00000084 E1A03083        mov              r3,r3,lsl #1 ;shift up to next 
                                                            bit. P1.16 -> P1.17
                                                             etc.
  108 00000088 E1530005        cmp              r3,r5
  109 0000008C 1AFFFFF7        bne              floop
  110 00000090 EAFFFFF5        b                wloop
  111 00000094         
  112 00000094         
  113 00000094         
  114 00000094         
  115 00000094         ;thread1 will begin here the first time
  116 00000094         thread1Start
  117 00000094 E59F0070        LDR              R0,=PINSEL0
  118 00000098 E3A01000        LDR              R1,=0x00000000
  119 0000009C E5801000        STR              R1,[R0]     ;Select port 0 as G
                                                            PIO mode
  120 000000A0 E59F0068        LDR              R0,=IODIR0
  121 000000A4 E3A01CFF        LDR              R1,=0X0000FF00 ;Mask to select 
                                                            P.08 as start pin o
                                                            f output
  122 000000A8 E5801000        STR              R1, [R0]
  123 000000AC         
  124 000000AC E59F4060        LDR              R4, =array  ;array.address
  125 000000B0 E59F5060        LDR              R5, =arrayN
  126 000000B4 E5955000        LDR              R5, [R5]    ;arraySize
  127 000000B8         reset
  128 000000B8 E3A06000        LDR              R6, =0      ;counter
  129 000000BC         
  130 000000BC         while
  131 000000BC E1560005        CMP              R6, R5      ;while(counter<=arr
                                                            aySize)
  132 000000C0 AAFFFFFC        BGE              reset
  133 000000C4         
  134 000000C4 E59F2050        LDR              R2,=IOSET0  ;Set address
  135 000000C8 E7943106        LDR              R3, [R4, R6, LSL #2] ;value = v
                                                            alAt(array.startAdd
                                                            ress+offset)
  136 000000CC E5823000        STR              R3,[R2]     ;Make pin = value
  137 000000D0         
  138 000000D0         delay1
  139 000000D0         ;delay for about a half second
  140 000000D0 E3A08402        ldr              R8,=0x2000000
  141 000000D4 E2588001 
                       dloop1  subs             R8,R8,#1
  142 000000D8 1AFFFFFD        bne              dloop1
  143 000000DC         
  144 000000DC E59F203C        LDR              R2,=IOCLR0  ;Clear address
  145 000000E0 E5823000        STR              R3, [R2]    ;Clear pins
  146 000000E4 E2866001        ADD              R6, R6, #1  ;counter++
  147 000000E8 EAFFFFF3        B                while
  148 000000EC         
  149 000000EC EAFFFFFE 
                       stop    b                stop        ; branch always
  150 000000F0         ;main program execution will never drop below the statem
                       ent above.
  151 000000F0         
  152 000000F0 FFFFF000 



ARM Macro Assembler    Page 5 


              00000000 
              E0004000 
              00011FFF 
              E0028018 
              E0028014 
              E002801C 
              E002C000 
              E0028008 
              00000000 
              00000000 
              E0028004 
              E002800C         AREA             InterruptStuff, CODE, READONLY
  153 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
  154 00000004 E92D0003        STMFD            SP!, {R0 - R1} ; LR in this cas
                                                            e is the place to r
                                                            eturn to when we st
                                                            ore it 
  155 00000008 E59F0080        LDR              R0, =threads
  156 0000000C E59F1080        LDR              R1, =threadIndex
  157 00000010 E5911000        LDR              R1, [R1]
  158 00000014 E1A01101        LSL              R1, R1, #2
  159 00000018 E0800001        ADD              R0, R0, R1
  160 0000001C         ;R0 contains the pointer to the thread stack of current 
                       process
  161 0000001C E2801008        ADD              R1, R0, #8  ;adjust the stact p
                                                            ointer to the aprop
                                                            riate place in the 
                                                            stack
  162 00000020 E9215FFC        STMFD            R1!, {R2 - R12, LR}
  163 00000024 E8BD000C        LDMFD            SP!, {R2 - R3} ;load the saved 
                                                            registers back
  164 00000028 E9000003        STMFD            R0, {R0 - R1}
  165 0000002C         ;the regs are now saved onto the thread stack
  166 0000002C         
  167 0000002C         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  168 0000002C         ;i.e. we 'acknowledge' the interrupt
  169 0000002C E59F0064        ldr              r0,=T0
  170 00000030 E3A01001        mov              r1,#TimerResetTimer0Interrupt
  171 00000034 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  172 00000038         
  173 00000038         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  174 00000038 E59F005C        ldr              r0,=VIC
  175 0000003C E3A01000        mov              r1,#0
  176 00000040 E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  177 00000044         
  178 00000044         ;change into system mode
  179 00000044         ;!!!!!!!!!!!!!!!!
  180 00000044         
  181 00000044 E59F0044        LDR              R0, =threads
  182 00000048 E59F1044        LDR              R1, =threadIndex
  183 0000004C E59F204C        LDR              R2, =threadNum
  184 00000050 E5911000        LDR              R1, [R1]
  185 00000054 E5922000        LDR              R2, [R2]
  186 00000058 E2811001        ADD              R1, R1, #1



ARM Macro Assembler    Page 6 


  187 0000005C E1510002        CMP              R1, R2
  188 00000060 BA000000        BLT              endIterate
  189 00000064 E3A01000        LDR              R1, =0
  190 00000068         endIterate
  191 00000068         ;changes to the next stack pointer 
  192 00000068 E1A01101        LSL              R1, R1, #2
  193 0000006C E0800001        ADD              R0, R0, R1
  194 00000070         ;R0 is now the pointer to the next thread stack
  195 00000070 E1A01000        MOV              R1, R0
  196 00000074 E3A0200D        LDR              R2, =13
  197 00000078 E7904102        LDR              R4, [R0, R2, LSL #2] 
                                                            ;load the pc to R4
  198 0000007C E8B1001C        LDMFD            R1!, {R2 - R4}
  199 00000080 E92D001C        STMFD            SP!, {R2 - R4}
  200 00000084         ;adjust to thread stack to right reg
  201 00000084 E2800008        ADD              R0, R0, #8
  202 00000088 E8B01FFC        LDMFD            R0!, {R2 - R12}
  203 0000008C E8BD8003        LDMFD            SP!, {R0 - R1, PC}
  204 00000090         
  205 00000090 00000000 
              00000000 
              E0004000 
              FFFFF000 
              00000000 
              00000000 
              00000000         AREA             Subroutines, CODE, READONLY
  206 00000000         
  207 00000000                 AREA             Stuff, DATA, READWRITE
  208 00000000         
  209 00000000         
  210 00000000 00000010 
                       arrayN  DCD              16
  211 00000004         
  212 00000004 00003F00 
              00000600 
              00005B00 
              00004F00 
              00006600 
              00006D00 
              00007D00 
              00000700 
              00007F00 
              00006F00 
              00007700 
              00007C00 
              00003900 
              00005E00 
              00007900 
              00007100 array   DCD              0x00003F00,0x00000600,0x00005B0
0,0x00004F00,0x00006600,0x00006D00,0x00007D00,0x00000700,0x00007F00,0x00006F00,
0x00007700,0x00007C00,0x00003900,0x00005E00,0x00007900, 0x00007100
  213 00000044         
  214 00000044         
  215 00000044 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 7 


              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 thread0 DCD              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, thread0Start 
                                                            ;last element is th
                                                            e pc of the thread
  216 0000007C 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 thread1 DCD              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, thread1Start
  217 000000B4         
  218 000000B4 00000002 
                       threadNum
                               DCD              2
  219 000000B8         
  220 000000B8 00000000 
                       threadIndex
                               DCD              0
  221 000000BC         
  222 000000BC 00000000 
              00000000 threads DCD              thread0, thread1
  223 000000C4         
  224 000000C4         
  225 000000C4                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 41 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
delay0 00000074

Symbol: delay0
   Definitions
      At line 100 in file App.s
   Uses
      None
Comment: delay0 unused
delay1 000000D0

Symbol: delay1
   Definitions
      At line 138 in file App.s
   Uses
      None
Comment: delay1 unused
dloop0 00000078

Symbol: dloop0
   Definitions
      At line 103 in file App.s
   Uses
      At line 104 in file App.s
Comment: dloop0 used once
dloop1 000000D4

Symbol: dloop1
   Definitions
      At line 141 in file App.s
   Uses
      At line 142 in file App.s
Comment: dloop1 used once
floop 00000070

Symbol: floop
   Definitions
      At line 98 in file App.s
   Uses
      At line 109 in file App.s
Comment: floop used once
reset 000000B8

Symbol: reset
   Definitions
      At line 127 in file App.s
   Uses
      At line 132 in file App.s
Comment: reset used once
start 00000000

Symbol: start



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 45 in file App.s
   Uses
      At line 44 in file App.s
Comment: start used once
stop 000000EC

Symbol: stop
   Definitions
      At line 149 in file App.s
   Uses
      At line 149 in file App.s
Comment: stop used once
thread0Start 00000050

Symbol: thread0Start
   Definitions
      At line 84 in file App.s
   Uses
      At line 215 in file App.s
Comment: thread0Start used once
thread1Start 00000094

Symbol: thread1Start
   Definitions
      At line 116 in file App.s
   Uses
      At line 216 in file App.s
Comment: thread1Start used once
while 000000BC

Symbol: while
   Definitions
      At line 130 in file App.s
   Uses
      At line 147 in file App.s
Comment: while used once
wloop 0000006C

Symbol: wloop
   Definitions
      At line 97 in file App.s
   Uses
      At line 110 in file App.s
Comment: wloop used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 152 in file App.s
   Uses
      None
Comment: InterruptStuff unused
endIterate 00000068

Symbol: endIterate
   Definitions
      At line 190 in file App.s
   Uses
      At line 188 in file App.s
Comment: endIterate used once
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 153 in file App.s
   Uses
      At line 50 in file App.s
Comment: irqhan used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Subroutines 00000000

Symbol: Subroutines
   Definitions
      At line 205 in file App.s
   Uses
      None
Comment: Subroutines unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Stuff 00000000

Symbol: Stuff
   Definitions
      At line 207 in file App.s
   Uses
      None
Comment: Stuff unused
array 00000004

Symbol: array
   Definitions
      At line 212 in file App.s
   Uses
      At line 124 in file App.s
Comment: array used once
arrayN 00000000

Symbol: arrayN
   Definitions
      At line 210 in file App.s
   Uses
      At line 125 in file App.s
Comment: arrayN used once
thread0 00000044

Symbol: thread0
   Definitions
      At line 215 in file App.s
   Uses
      At line 222 in file App.s
Comment: thread0 used once
thread1 0000007C

Symbol: thread1
   Definitions
      At line 216 in file App.s
   Uses
      At line 222 in file App.s
Comment: thread1 used once
threadIndex 000000B8

Symbol: threadIndex
   Definitions
      At line 220 in file App.s
   Uses
      At line 156 in file App.s
      At line 182 in file App.s

threadNum 000000B4

Symbol: threadNum
   Definitions
      At line 218 in file App.s
   Uses
      At line 183 in file App.s
Comment: threadNum used once
threads 000000BC




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: threads
   Definitions
      At line 222 in file App.s
   Uses
      At line 155 in file App.s
      At line 181 in file App.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 32 in file App.s
   Uses
      At line 90 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 30 in file App.s
   Uses
      At line 85 in file App.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 33 in file App.s
   Uses
      None
Comment: IO1PIN unused
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 31 in file App.s
   Uses
      At line 88 in file App.s
Comment: IO1SET used once
IOCLR0 E002800C

Symbol: IOCLR0
   Definitions
      At line 36 in file App.s
   Uses
      At line 144 in file App.s
Comment: IOCLR0 used once
IODIR0 E0028008

Symbol: IODIR0
   Definitions
      At line 34 in file App.s
   Uses
      At line 120 in file App.s
Comment: IODIR0 used once
IOPIN0 E0028000

Symbol: IOPIN0
   Definitions
      At line 37 in file App.s
   Uses
      None
Comment: IOPIN0 unused
IOSET0 E0028004

Symbol: IOSET0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 35 in file App.s
   Uses
      At line 134 in file App.s
Comment: IOSET0 used once
IR 00000000

Symbol: IR
   Definitions
      At line 8 in file App.s
   Uses
      At line 69 in file App.s
      At line 171 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 53 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 57 in file App.s
Comment: IntEnable used once
MCR 00000014

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 75 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 72 in file App.s
Comment: MR0 used once
PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 38 in file App.s
   Uses
      At line 117 in file App.s
Comment: PINSEL0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 63 in file App.s
      At line 169 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 9 in file App.s
   Uses
      At line 66 in file App.s
      At line 78 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 53 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 56 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 65 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 77 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 74 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 68 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 170 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 48 in file App.s
      At line 174 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 60 in file App.s
      At line 176 in file App.s

VectAddr0 00000100

Symbol: VectAddr0
   Definitions
      At line 23 in file App.s
   Uses
      At line 51 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 54 in file App.s
Comment: VectCtrl0 used once
28 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 42 in file App.s
   Uses
      None
Comment: main unused
1 symbol
391 symbols in table
